/*
 * Copyright (C) 2012 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * V1.0
 */
/*History
*Date                  Modification                                 Reason
*
*/

#include <utils/Log.h>
#include "sensor.h"
#include "jpeg_exif_header.h"
#include "sensor_drv_u.h"
#include "sensor_raw.h"

#include "parameters/sensor_s5k3m3sm24_raw_param_main.c"

#define VENDOR_NUM 1
#define SENSOR_NAME "s5k3m3sm24"
#define I2C_SLAVE_ADDR 0x5a

#define s5k3m3sm24_PID_ADDR 0x0000
#define s5k3m3sm24_PID_VALUE 0x30d3
#define s5k3m3sm24_VER_ADDR 0x0002
#define s5k3m3sm24_VER_VALUE 0xa101

/* sensor parameters begin */
/* effective sensor output image size */
#define VIDEO_WIDTH 1280
#define VIDEO_HEIGHT 720
#define PREVIEW_WIDTH 2104
#define PREVIEW_HEIGHT 1560
#define SNAPSHOT_WIDTH 4208
#define SNAPSHOT_HEIGHT 3120

/*Raw Trim parameters*/
#define VIDEO_TRIM_X 0
#define VIDEO_TRIM_Y 0
#define VIDEO_TRIM_W 1280
#define VIDEO_TRIM_H 720
#define PREVIEW_TRIM_X 0
#define PREVIEW_TRIM_Y 0
#define PREVIEW_TRIM_W 2104
#define PREVIEW_TRIM_H 1560
#define SNAPSHOT_TRIM_X 0
#define SNAPSHOT_TRIM_Y 0
#define SNAPSHOT_TRIM_W 4208
#define SNAPSHOT_TRIM_H 3120

/*Mipi output*/
#define LANE_NUM 2
#define RAW_BITS 10

#define VIDEO_MIPI_PER_LANE_BPS 1176    /* 2*Mipi clk */
#define PREVIEW_MIPI_PER_LANE_BPS 1176  /* 2*Mipi clk */
#define SNAPSHOT_MIPI_PER_LANE_BPS 1176 /* 2*Mipi clk */

/*line time unit: ns*/
#define VIDEO_LINE_TIME
#define PREVIEW_LINE_TIME 9800
#define SNAPSHOT_LINE_TIME 19600

/* frame length*/
#define VIDEO_FRAME_LENGTH
#define PREVIEW_FRAME_LENGTH 3399
#define SNAPSHOT_FRAME_LENGTH 3399

/* please ref your spec */
#define FRAME_OFFSET 8
#define SENSOR_MAX_GAIN 0x200
#define SENSOR_BASE_GAIN 0x20
#define SENSOR_MIN_SHUTTER 6

/* please ref your spec
 * 1 : average binning
 * 2 : sum-average binning
 * 4 : sum binning
 */
#define BINNING_FACTOR 1

/* please ref spec
 * 1: sensor auto caculate
 * 0: driver caculate
 */
#define SUPPORT_AUTO_FRAME_LENGTH 0

/*delay 1 frame to write sensor gain*/
//#define GAIN_DELAY_1_FRAME

/* sensor parameters end */

/* isp parameters, please don't change it*/
#define ISP_BASE_GAIN 0x80

/* please don't change it */
#define EX_MCLK 24

/*==============================================================================
 * Description:
 * register setting
 *============================================================================*/

static const SENSOR_REG_T s5k3m3sm24_init_setting[] = {
    // MCLK:24
    // Width:2104,Height:1560
    // Format:MIPI_RAW10
    // mipi_lane:2
    // mipi_datarate:1176
    {0x6028, 0x4000},
    {0x0000, 0x0004},
    {0x0000, 0x30D3},
    {0x6010, 0x0001},
    {0xffff, 0x000a}, // p3 delay 3ms
    {0x6214, 0x7971},
    {0x6218, 0x7150},
    {0x0A02, 0x3F00},

    // TnP & etc setting
    {0x6028, 0x2000},
    {0x602A, 0x30EC},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0449},
    {0x6F12, 0x0348},
    {0x6F12, 0x044A},
    {0x6F12, 0x0860},
    {0x6F12, 0x101A},
    {0x6F12, 0x8880},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4EB8},
    {0x6F12, 0x2000},
    {0x6F12, 0x3280},
    {0x6F12, 0x2000},
    {0x6F12, 0x1E80},
    {0x6F12, 0x2000},
    {0x6F12, 0x4C00},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x2DE9},
    {0x6F12, 0xF041},
    {0x6F12, 0x344D},
    {0x6F12, 0x0646},
    {0x6F12, 0x0022},
    {0x6F12, 0x6968},
    {0x6F12, 0x0C0C},
    {0x6F12, 0x8FB2},
    {0x6F12, 0x3946},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x72F8},
    {0x6F12, 0x3046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x74F8},
    {0x6F12, 0x0122},
    {0x6F12, 0x3946},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x6AF8},
    {0x6F12, 0x2C48},
    {0x6F12, 0xB0F8},
    {0x6F12, 0x5800},
    {0x6F12, 0x2860},
    {0x6F12, 0xBDE8},
    {0x6F12, 0xF081},
    {0x6F12, 0x2DE9},
    {0x6F12, 0xF041},
    {0x6F12, 0x274E},
    {0x6F12, 0x8846},
    {0x6F12, 0x0446},
    {0x6F12, 0xB168},
    {0x6F12, 0x0022},
    {0x6F12, 0x0D0C},
    {0x6F12, 0x8FB2},
    {0x6F12, 0x3946},
    {0x6F12, 0x2846},
    {0x6F12, 0x00F0},
    {0x6F12, 0x57F8},
    {0x6F12, 0x7088},
    {0x6F12, 0x2080},
    {0x6F12, 0x4146},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x5BF8},
    {0x6F12, 0x3946},
    {0x6F12, 0x2846},
    {0x6F12, 0xBDE8},
    {0x6F12, 0xF041},
    {0x6F12, 0x0122},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4AB8},
    {0x6F12, 0x0179},
    {0x6F12, 0x8079},
    {0x6F12, 0x01B9},
    {0x6F12, 0x48B1},
    {0x6F12, 0x0121},
    {0x6F12, 0x401E},
    {0x6F12, 0x8140},
    {0x6F12, 0x1F23},
    {0x6F12, 0x8B43},
    {0x6F12, 0x0422},
    {0x6F12, 0x1849},
    {0x6F12, 0x0220},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4BB8},
    {0x6F12, 0x1F21},
    {0x6F12, 0x0220},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4CB8},
    {0x6F12, 0x10B5},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x5F01},
    {0x6F12, 0x1348},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4AF8},
    {0x6F12, 0x0F4C},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x9F01},
    {0x6F12, 0xA060},
    {0x6F12, 0x1048},
    {0x6F12, 0x00F0},
    {0x6F12, 0x42F8},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x4701},
    {0x6F12, 0x6060},
    {0x6F12, 0x0E48},
    {0x6F12, 0x00F0},
    {0x6F12, 0x3BF8},
    {0x6F12, 0xE060},
    {0x6F12, 0x0E48},
    {0x6F12, 0x0E4B},
    {0x6F12, 0x0C4A},
    {0x6F12, 0xC18C},
    {0x6F12, 0x43F8},
    {0x6F12, 0x2120},
    {0x6F12, 0x4A1C},
    {0x6F12, 0xC284},
    {0x6F12, 0xBDE8},
    {0x6F12, 0x1040},
    {0x6F12, 0x45F2},
    {0x6F12, 0xCC40},
    {0x6F12, 0x00F0},
    {0x6F12, 0x31B8},
    {0x6F12, 0x0000},
    {0x6F12, 0x2000},
    {0x6F12, 0x3270},
    {0x6F12, 0x2000},
    {0x6F12, 0x1CC0},
    {0x6F12, 0x0000},
    {0x6F12, 0x5553},
    {0x6F12, 0x0000},
    {0x6F12, 0x75C7},
    {0x6F12, 0x0000},
    {0x6F12, 0x71B1},
    {0x6F12, 0x0000},
    {0x6F12, 0x0635},
    {0x6F12, 0x3A70},
    {0x6F12, 0x0120},
    {0x6F12, 0x2000},
    {0x6F12, 0x1E80},
    {0x6F12, 0x2000},
    {0x6F12, 0x2E10},
    {0x6F12, 0x40F6},
    {0x6F12, 0x4F0C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x47F2},
    {0x6F12, 0xB11C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x47F2},
    {0x6F12, 0xC75C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x40F2},
    {0x6F12, 0xCD2C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x40F2},
    {0x6F12, 0x473C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x4DF6},
    {0x6F12, 0x4B2C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x4DF6},
    {0x6F12, 0xEB1C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x30D3},
    {0x6F12, 0x02AF},
    {0x6F12, 0x0000},
    {0x6F12, 0x0001},
    {0x6028, 0x4000},
    {0x0216, 0x0000},
    {0x3D70, 0x0002},
    {0x3D6A, 0x0001},
    {0x3D66, 0x0105},
    {0x3D64, 0x0105},
    {0x3D6C, 0x0080},
    {0xF496, 0x0048},
    {0xF470, 0x0008},
    {0xF43A, 0x0015},
    {0x3676, 0x0008},
    {0x3678, 0x0008},
    {0x32A8, 0x000C},
    {0x3238, 0x000B},
    {0x3230, 0x000C},
    {0x3AC8, 0x0A04},
    {0x322E, 0x000C},
    {0x3236, 0x000B},
    {0x32A6, 0x000C},
    {0x362A, 0x0303},
    {0xF442, 0x44C6},
    {0xF408, 0xFFF7},
    {0x3666, 0x030B},
    {0x3664, 0x0019},
    {0x32F8, 0x0003},
    {0x32F0, 0x0001},
    {0x3616, 0x0707},
    {0x3622, 0x0808},
    {0x3626, 0x0808},
    {0x32EE, 0x0001},
    {0x32F6, 0x0003},
    {0x361E, 0x3030},
    {0x3670, 0x0001},
    {0x31B6, 0x0008},
    {0xF4D0, 0x0034},
    {0xF4D8, 0x0034},
    {0xF636, 0x00D6},
    {0xF638, 0x00DE},
    {0xF63A, 0x00EE},
    {0xF63C, 0x00F6},
    {0xF63E, 0x0106},
    {0xF640, 0x010E},
    {0x3D34, 0x0010},
    {0x0200, 0x0618},
    {0x021E, 0x0400},
    {0x021C, 0x0000},
    {0x30A0, 0x0008},
    {0x0112, 0x0A0A},
    {0x3606, 0x0104},
    {0x0B00, 0x0080},
    {0x3070, 0x0100},
    {0x3090, 0x0904},
    {0x3058, 0x0001},
    {0x3150, 0x1838},
    {0x6028, 0x2000},
    {0x602A, 0x157C},
    {0x6F12, 0x0100},
    {0x602A, 0x15F0},
    {0x6F12, 0x0101},
    {0x602A, 0x1898},
    {0x6F12, 0x0101},

    // Mode
    {0x6028, 0x4000},
    {0x6214, 0x7971},
    {0x6218, 0x7150},
    {0x0344, 0x0008},
    {0x0346, 0x0008},
    {0x0348, 0x1077},
    {0x034A, 0x0C37},
    {0x034C, 0x0838},
    {0x034E, 0x0618},
    {0x0340, 0x0D47},
    {0x0342, 0x1260},
    {0x3000, 0x0001},
    {0x0900, 0x0112},
    {0x0380, 0x0001},
    {0x0382, 0x0001},
    {0x0384, 0x0001},
    {0x0386, 0x0003},
    {0x0400, 0x0001},
    {0x0404, 0x0020},
    {0x3002, 0x0001},
    {0x0136, 0x1800},
    {0x0300, 0x0004},
    {0x0302, 0x0001},
    {0x0304, 0x0006},
    {0x0306, 0x0078},
    {0x0308, 0x0008},
    {0x030A, 0x0001},
    {0x030C, 0x0004},
    {0x030E, 0x0062},
    {0x0202, 0x0D27},
    {0x0204, 0x0020},
    {0x0206, 0x0020},
    {0x0B04, 0x0101},
    {0x0B08, 0x0000},
    {0x0B0E, 0x0000},
    {0x3D06, 0x0010},
    {0x6028, 0x2000},
    {0x602A, 0x19E0},
    {0x6F12, 0x0001},
    {0x6028, 0x4000},
    {0x30E2, 0x0000},
    {0x317A, 0x0007},
    {0x30D4, 0x0300},
    {0x30D2, 0x0004},
    {0x30D6, 0x0000},
    {0x6028, 0x2000},
    {0x602A, 0x2F40},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x602A, 0x2F54},
    {0x6F12, 0x0000},
    {0x602A, 0x2F48},
    {0x6F12, 0x0000},
    {0x6028, 0x4000},
    {0x30DA, 0x0200},
    {0x30DC, 0x0200},
    {0x6028, 0x2000},
    {0x602A, 0x2F52},
    {0x6F12, 0x0200},
    {0x602A, 0x2F34},
    {0x6F12, 0x0100},
    {0x602A, 0x2F60},
    {0x6F12, 0x0101},
    {0x6F12, 0x0100},
    {0x6028, 0x4000},
    {0x30D8, 0x0100},
    {0x3EFA, 0x0000},
    {0x3EF8, 0x0000},
    {0x0114, 0x0100},
    {0x0110, 0x1002},
    {0xF440, 0x006F},
    {0xF494, 0x0020},
    {0xF4CC, 0x0029},
    {0xF4CE, 0x002C},
    {0xF4D2, 0x0035},
    {0xF4D4, 0x0038},
    {0xF4D6, 0x0039},
    {0xF4DA, 0x0035},
    {0xF4DC, 0x0038},
    {0xF4DE, 0x0039},
    {0x3604, 0x0000},

    //{0x0100, 0x0100}
};

static const SENSOR_REG_T s5k3m3sm24_preview_setting[] = {
    // MCLK:24
    // Width:2104,Height:1560
    // Format:MIPI_RAW10
    // mipi_lane:2
    // mipi_datarate:1176
    {0x6028, 0x4000},
    //{0x0000, 0x0004},
    //{0x0000, 0x30D3},
    //{0x6010, 0x0001},
    // p3 delay 3ms
    {0x6214, 0x7971},
    {0x6218, 0x7150},
    {0x0A02, 0x3F00},

    // TnP & etc setting
    {0x6028, 0x2000},
    {0x602A, 0x30EC},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0449},
    {0x6F12, 0x0348},
    {0x6F12, 0x044A},
    {0x6F12, 0x0860},
    {0x6F12, 0x101A},
    {0x6F12, 0x8880},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4EB8},
    {0x6F12, 0x2000},
    {0x6F12, 0x3280},
    {0x6F12, 0x2000},
    {0x6F12, 0x1E80},
    {0x6F12, 0x2000},
    {0x6F12, 0x4C00},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x2DE9},
    {0x6F12, 0xF041},
    {0x6F12, 0x344D},
    {0x6F12, 0x0646},
    {0x6F12, 0x0022},
    {0x6F12, 0x6968},
    {0x6F12, 0x0C0C},
    {0x6F12, 0x8FB2},
    {0x6F12, 0x3946},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x72F8},
    {0x6F12, 0x3046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x74F8},
    {0x6F12, 0x0122},
    {0x6F12, 0x3946},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x6AF8},
    {0x6F12, 0x2C48},
    {0x6F12, 0xB0F8},
    {0x6F12, 0x5800},
    {0x6F12, 0x2860},
    {0x6F12, 0xBDE8},
    {0x6F12, 0xF081},
    {0x6F12, 0x2DE9},
    {0x6F12, 0xF041},
    {0x6F12, 0x274E},
    {0x6F12, 0x8846},
    {0x6F12, 0x0446},
    {0x6F12, 0xB168},
    {0x6F12, 0x0022},
    {0x6F12, 0x0D0C},
    {0x6F12, 0x8FB2},
    {0x6F12, 0x3946},
    {0x6F12, 0x2846},
    {0x6F12, 0x00F0},
    {0x6F12, 0x57F8},
    {0x6F12, 0x7088},
    {0x6F12, 0x2080},
    {0x6F12, 0x4146},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x5BF8},
    {0x6F12, 0x3946},
    {0x6F12, 0x2846},
    {0x6F12, 0xBDE8},
    {0x6F12, 0xF041},
    {0x6F12, 0x0122},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4AB8},
    {0x6F12, 0x0179},
    {0x6F12, 0x8079},
    {0x6F12, 0x01B9},
    {0x6F12, 0x48B1},
    {0x6F12, 0x0121},
    {0x6F12, 0x401E},
    {0x6F12, 0x8140},
    {0x6F12, 0x1F23},
    {0x6F12, 0x8B43},
    {0x6F12, 0x0422},
    {0x6F12, 0x1849},
    {0x6F12, 0x0220},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4BB8},
    {0x6F12, 0x1F21},
    {0x6F12, 0x0220},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4CB8},
    {0x6F12, 0x10B5},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x5F01},
    {0x6F12, 0x1348},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4AF8},
    {0x6F12, 0x0F4C},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x9F01},
    {0x6F12, 0xA060},
    {0x6F12, 0x1048},
    {0x6F12, 0x00F0},
    {0x6F12, 0x42F8},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x4701},
    {0x6F12, 0x6060},
    {0x6F12, 0x0E48},
    {0x6F12, 0x00F0},
    {0x6F12, 0x3BF8},
    {0x6F12, 0xE060},
    {0x6F12, 0x0E48},
    {0x6F12, 0x0E4B},
    {0x6F12, 0x0C4A},
    {0x6F12, 0xC18C},
    {0x6F12, 0x43F8},
    {0x6F12, 0x2120},
    {0x6F12, 0x4A1C},
    {0x6F12, 0xC284},
    {0x6F12, 0xBDE8},
    {0x6F12, 0x1040},
    {0x6F12, 0x45F2},
    {0x6F12, 0xCC40},
    {0x6F12, 0x00F0},
    {0x6F12, 0x31B8},
    {0x6F12, 0x0000},
    {0x6F12, 0x2000},
    {0x6F12, 0x3270},
    {0x6F12, 0x2000},
    {0x6F12, 0x1CC0},
    {0x6F12, 0x0000},
    {0x6F12, 0x5553},
    {0x6F12, 0x0000},
    {0x6F12, 0x75C7},
    {0x6F12, 0x0000},
    {0x6F12, 0x71B1},
    {0x6F12, 0x0000},
    {0x6F12, 0x0635},
    {0x6F12, 0x3A70},
    {0x6F12, 0x0120},
    {0x6F12, 0x2000},
    {0x6F12, 0x1E80},
    {0x6F12, 0x2000},
    {0x6F12, 0x2E10},
    {0x6F12, 0x40F6},
    {0x6F12, 0x4F0C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x47F2},
    {0x6F12, 0xB11C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x47F2},
    {0x6F12, 0xC75C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x40F2},
    {0x6F12, 0xCD2C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x40F2},
    {0x6F12, 0x473C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x4DF6},
    {0x6F12, 0x4B2C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x4DF6},
    {0x6F12, 0xEB1C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x30D3},
    {0x6F12, 0x02AF},
    {0x6F12, 0x0000},
    {0x6F12, 0x0001},
    {0x6028, 0x4000},
    {0x0216, 0x0000},
    {0x3D70, 0x0002},
    {0x3D6A, 0x0001},
    {0x3D66, 0x0105},
    {0x3D64, 0x0105},
    {0x3D6C, 0x0080},
    {0xF496, 0x0048},
    {0xF470, 0x0008},
    {0xF43A, 0x0015},
    {0x3676, 0x0008},
    {0x3678, 0x0008},
    {0x32A8, 0x000C},
    {0x3238, 0x000B},
    {0x3230, 0x000C},
    {0x3AC8, 0x0A04},
    {0x322E, 0x000C},
    {0x3236, 0x000B},
    {0x32A6, 0x000C},
    {0x362A, 0x0303},
    {0xF442, 0x44C6},
    {0xF408, 0xFFF7},
    {0x3666, 0x030B},
    {0x3664, 0x0019},
    {0x32F8, 0x0003},
    {0x32F0, 0x0001},
    {0x3616, 0x0707},
    {0x3622, 0x0808},
    {0x3626, 0x0808},
    {0x32EE, 0x0001},
    {0x32F6, 0x0003},
    {0x361E, 0x3030},
    {0x3670, 0x0001},
    {0x31B6, 0x0008},
    {0xF4D0, 0x0034},
    {0xF4D8, 0x0034},
    {0xF636, 0x00D6},
    {0xF638, 0x00DE},
    {0xF63A, 0x00EE},
    {0xF63C, 0x00F6},
    {0xF63E, 0x0106},
    {0xF640, 0x010E},
    {0x3D34, 0x0010},
    {0x0200, 0x0618},
    {0x021E, 0x0400},
    {0x021C, 0x0000},
    {0x30A0, 0x0008},
    {0x0112, 0x0A0A},
    {0x3606, 0x0104},
    {0x0B00, 0x0080},
    {0x3070, 0x0100},
    {0x3090, 0x0904},
    {0x3058, 0x0001},
    {0x3150, 0x1838},
    {0x6028, 0x2000},
    {0x602A, 0x157C},
    {0x6F12, 0x0100},
    {0x602A, 0x15F0},
    {0x6F12, 0x0101},
    {0x602A, 0x1898},
    {0x6F12, 0x0101},

    // Mode
    {0x6028, 0x4000},
    {0x6214, 0x7971},
    {0x6218, 0x7150},
    {0x0344, 0x0008},
    {0x0346, 0x0008},
    {0x0348, 0x1077},
    {0x034A, 0x0C37},
    {0x034C, 0x0838},
    {0x034E, 0x0618},
    {0x0340, 0x0D47},
    {0x0342, 0x1260},
    {0x3000, 0x0001},
    {0x0900, 0x0112},
    {0x0380, 0x0001},
    {0x0382, 0x0001},
    {0x0384, 0x0001},
    {0x0386, 0x0003},
    {0x0400, 0x0001},
    {0x0404, 0x0020},
    {0x3002, 0x0001},
    {0x0136, 0x1800},
    {0x0300, 0x0004},
    {0x0302, 0x0001},
    {0x0304, 0x0006},
    {0x0306, 0x0078},
    {0x0308, 0x0008},
    {0x030A, 0x0001},
    {0x030C, 0x0004},
    {0x030E, 0x0062},
    {0x0202, 0x0D27},
    {0x0204, 0x0020},
    {0x0206, 0x0020},
    {0x0B04, 0x0101},
    {0x0B08, 0x0000},
    {0x0B0E, 0x0000},
    {0x3D06, 0x0010},
    {0x6028, 0x2000},
    {0x602A, 0x19E0},
    {0x6F12, 0x0001},
    {0x6028, 0x4000},
    {0x30E2, 0x0000},
    {0x317A, 0x0007},
    {0x30D4, 0x0300},
    {0x30D2, 0x0004},
    {0x30D6, 0x0000},
    {0x6028, 0x2000},
    {0x602A, 0x2F40},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x602A, 0x2F54},
    {0x6F12, 0x0000},
    {0x602A, 0x2F48},
    {0x6F12, 0x0000},
    {0x6028, 0x4000},
    {0x30DA, 0x0200},
    {0x30DC, 0x0200},
    {0x6028, 0x2000},
    {0x602A, 0x2F52},
    {0x6F12, 0x0200},
    {0x602A, 0x2F34},
    {0x6F12, 0x0100},
    {0x602A, 0x2F60},
    {0x6F12, 0x0101},
    {0x6F12, 0x0100},
    {0x6028, 0x4000},
    {0x30D8, 0x0100},
    {0x3EFA, 0x0000},
    {0x3EF8, 0x0000},
    {0x0114, 0x0100},
    {0x0110, 0x1002},
    {0xF440, 0x006F},
    {0xF494, 0x0020},
    {0xF4CC, 0x0029},
    {0xF4CE, 0x002C},
    {0xF4D2, 0x0035},
    {0xF4D4, 0x0038},
    {0xF4D6, 0x0039},
    {0xF4DA, 0x0035},
    {0xF4DC, 0x0038},
    {0xF4DE, 0x0039},
    {0x3604, 0x0000},

    //{0x0100, 0x0100}
};

static const SENSOR_REG_T s5k3m3sm24_snapshot_setting[] = {
    // MCLK:24
    // Width:4208,Height:3120
    // Format:MIPI_RAW10
    // mipi_lane:2
    // mipi_datarate:1176
    {0x6028, 0x4000},
    //{0x0000, 0x0004},
    //{0x0000, 0x30D3},
    //{0x6010, 0x0001},
    // p3 delay 3ms
    {0x6214, 0x7971},
    {0x6218, 0x7150},
    {0x0A02, 0x3F00},

    // TnP & etc setting
    {0x6028, 0x2000},
    {0x602A, 0x30EC},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0449},
    {0x6F12, 0x0348},
    {0x6F12, 0x044A},
    {0x6F12, 0x0860},
    {0x6F12, 0x101A},
    {0x6F12, 0x8880},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4EB8},
    {0x6F12, 0x2000},
    {0x6F12, 0x3280},
    {0x6F12, 0x2000},
    {0x6F12, 0x1E80},
    {0x6F12, 0x2000},
    {0x6F12, 0x4C00},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x2DE9},
    {0x6F12, 0xF041},
    {0x6F12, 0x344D},
    {0x6F12, 0x0646},
    {0x6F12, 0x0022},
    {0x6F12, 0x6968},
    {0x6F12, 0x0C0C},
    {0x6F12, 0x8FB2},
    {0x6F12, 0x3946},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x72F8},
    {0x6F12, 0x3046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x74F8},
    {0x6F12, 0x0122},
    {0x6F12, 0x3946},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x6AF8},
    {0x6F12, 0x2C48},
    {0x6F12, 0xB0F8},
    {0x6F12, 0x5800},
    {0x6F12, 0x2860},
    {0x6F12, 0xBDE8},
    {0x6F12, 0xF081},
    {0x6F12, 0x2DE9},
    {0x6F12, 0xF041},
    {0x6F12, 0x274E},
    {0x6F12, 0x8846},
    {0x6F12, 0x0446},
    {0x6F12, 0xB168},
    {0x6F12, 0x0022},
    {0x6F12, 0x0D0C},
    {0x6F12, 0x8FB2},
    {0x6F12, 0x3946},
    {0x6F12, 0x2846},
    {0x6F12, 0x00F0},
    {0x6F12, 0x57F8},
    {0x6F12, 0x7088},
    {0x6F12, 0x2080},
    {0x6F12, 0x4146},
    {0x6F12, 0x2046},
    {0x6F12, 0x00F0},
    {0x6F12, 0x5BF8},
    {0x6F12, 0x3946},
    {0x6F12, 0x2846},
    {0x6F12, 0xBDE8},
    {0x6F12, 0xF041},
    {0x6F12, 0x0122},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4AB8},
    {0x6F12, 0x0179},
    {0x6F12, 0x8079},
    {0x6F12, 0x01B9},
    {0x6F12, 0x48B1},
    {0x6F12, 0x0121},
    {0x6F12, 0x401E},
    {0x6F12, 0x8140},
    {0x6F12, 0x1F23},
    {0x6F12, 0x8B43},
    {0x6F12, 0x0422},
    {0x6F12, 0x1849},
    {0x6F12, 0x0220},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4BB8},
    {0x6F12, 0x1F21},
    {0x6F12, 0x0220},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4CB8},
    {0x6F12, 0x10B5},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x5F01},
    {0x6F12, 0x1348},
    {0x6F12, 0x00F0},
    {0x6F12, 0x4AF8},
    {0x6F12, 0x0F4C},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x9F01},
    {0x6F12, 0xA060},
    {0x6F12, 0x1048},
    {0x6F12, 0x00F0},
    {0x6F12, 0x42F8},
    {0x6F12, 0x0022},
    {0x6F12, 0xAFF2},
    {0x6F12, 0x4701},
    {0x6F12, 0x6060},
    {0x6F12, 0x0E48},
    {0x6F12, 0x00F0},
    {0x6F12, 0x3BF8},
    {0x6F12, 0xE060},
    {0x6F12, 0x0E48},
    {0x6F12, 0x0E4B},
    {0x6F12, 0x0C4A},
    {0x6F12, 0xC18C},
    {0x6F12, 0x43F8},
    {0x6F12, 0x2120},
    {0x6F12, 0x4A1C},
    {0x6F12, 0xC284},
    {0x6F12, 0xBDE8},
    {0x6F12, 0x1040},
    {0x6F12, 0x45F2},
    {0x6F12, 0xCC40},
    {0x6F12, 0x00F0},
    {0x6F12, 0x31B8},
    {0x6F12, 0x0000},
    {0x6F12, 0x2000},
    {0x6F12, 0x3270},
    {0x6F12, 0x2000},
    {0x6F12, 0x1CC0},
    {0x6F12, 0x0000},
    {0x6F12, 0x5553},
    {0x6F12, 0x0000},
    {0x6F12, 0x75C7},
    {0x6F12, 0x0000},
    {0x6F12, 0x71B1},
    {0x6F12, 0x0000},
    {0x6F12, 0x0635},
    {0x6F12, 0x3A70},
    {0x6F12, 0x0120},
    {0x6F12, 0x2000},
    {0x6F12, 0x1E80},
    {0x6F12, 0x2000},
    {0x6F12, 0x2E10},
    {0x6F12, 0x40F6},
    {0x6F12, 0x4F0C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x47F2},
    {0x6F12, 0xB11C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x47F2},
    {0x6F12, 0xC75C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x40F2},
    {0x6F12, 0xCD2C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x40F2},
    {0x6F12, 0x473C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x4DF6},
    {0x6F12, 0x4B2C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x4DF6},
    {0x6F12, 0xEB1C},
    {0x6F12, 0xC0F2},
    {0x6F12, 0x000C},
    {0x6F12, 0x6047},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x6F12, 0x30D3},
    {0x6F12, 0x02AF},
    {0x6F12, 0x0000},
    {0x6F12, 0x0001},
    {0x6028, 0x4000},
    {0x0216, 0x0000},
    {0x3D70, 0x0002},
    {0x3D6A, 0x0001},
    {0x3D66, 0x0105},
    {0x3D64, 0x0105},
    {0x3D6C, 0x0080},
    {0xF496, 0x0048},
    {0xF470, 0x0008},
    {0xF43A, 0x0015},
    {0x3676, 0x0008},
    {0x3678, 0x0008},
    {0x32A8, 0x000C},
    {0x3238, 0x000B},
    {0x3230, 0x000C},
    {0x3AC8, 0x0A04},
    {0x322E, 0x000C},
    {0x3236, 0x000B},
    {0x32A6, 0x000C},
    {0x362A, 0x0303},
    {0xF442, 0x44C6},
    {0xF408, 0xFFF7},
    {0x3666, 0x030B},
    {0x3664, 0x0019},
    {0x32F8, 0x0003},
    {0x32F0, 0x0001},
    {0x3616, 0x0707},
    {0x3622, 0x0808},
    {0x3626, 0x0808},
    {0x32EE, 0x0001},
    {0x32F6, 0x0003},
    {0x361E, 0x3030},
    {0x3670, 0x0001},
    {0x31B6, 0x0008},
    {0xF4D0, 0x0034},
    {0xF4D8, 0x0034},
    {0xF636, 0x00D6},
    {0xF638, 0x00DE},
    {0xF63A, 0x00EE},
    {0xF63C, 0x00F6},
    {0xF63E, 0x0106},
    {0xF640, 0x010E},
    {0x3D34, 0x0010},
    {0x0200, 0x0618},
    {0x021E, 0x0400},
    {0x021C, 0x0000},
    {0x30A0, 0x0008},
    {0x0112, 0x0A0A},
    {0x3606, 0x0104},
    {0x0B00, 0x0080},
    {0x3070, 0x0100},
    {0x3090, 0x0904},
    {0x3058, 0x0001},
    {0x3150, 0x1838},
    {0x6028, 0x2000},
    {0x602A, 0x157C},
    {0x6F12, 0x0100},
    {0x602A, 0x15F0},
    {0x6F12, 0x0101},
    {0x602A, 0x1898},
    {0x6F12, 0x0101},

    // Mode
    {0x6028, 0x4000},
    {0x6214, 0x7971},
    {0x6218, 0x7150},
    {0x0344, 0x0008},
    {0x0346, 0x0008},
    {0x0348, 0x1077},
    {0x034A, 0x0C37},
    {0x034C, 0x1070},
    {0x034E, 0x0C30},
    {0x0340, 0x0D47},
    {0x0342, 0x24C0},
    {0x3000, 0x0001},
    {0x0900, 0x0011},
    {0x0380, 0x0001},
    {0x0382, 0x0001},
    {0x0384, 0x0001},
    {0x0386, 0x0001},
    {0x0400, 0x0000},
    {0x0404, 0x0010},
    {0x3002, 0x0001},
    {0x0136, 0x1800},
    {0x0300, 0x0004},
    {0x0302, 0x0001},
    {0x0304, 0x0006},
    {0x0306, 0x0078},
    {0x0308, 0x0008},
    {0x030A, 0x0001},
    {0x030C, 0x0004},
    {0x030E, 0x0062},
    {0x0202, 0x0D27},
    {0x0204, 0x0020},
    {0x0206, 0x0020},
    {0x0B04, 0x0101},
    {0x0B08, 0x0000},
    {0x0B0E, 0x0000},
    {0x3D06, 0x0010},
    {0x6028, 0x2000},
    {0x602A, 0x19E0},
    {0x6F12, 0x0001},
    {0x6028, 0x4000},
    {0x30E2, 0x0000},
    {0x317A, 0x0007},
    {0x30D4, 0x0300},
    {0x30D2, 0x0004},
    {0x30D6, 0x0000},
    {0x6028, 0x2000},
    {0x602A, 0x2F40},
    {0x6F12, 0x0000},
    {0x6F12, 0x0000},
    {0x602A, 0x2F54},
    {0x6F12, 0x0000},
    {0x602A, 0x2F48},
    {0x6F12, 0x0000},
    {0x6028, 0x4000},
    {0x30DA, 0x0200},
    {0x30DC, 0x0200},
    {0x6028, 0x2000},
    {0x602A, 0x2F52},
    {0x6F12, 0x0200},
    {0x602A, 0x2F34},
    {0x6F12, 0x0100},
    {0x602A, 0x2F60},
    {0x6F12, 0x0101},
    {0x6F12, 0x0100},
    {0x6028, 0x4000},
    {0x30D8, 0x0100},
    {0x3EFA, 0x0000},
    {0x3EF8, 0x0000},
    {0x0114, 0x0100},
    {0x0110, 0x1002},
    {0xF440, 0x002F},
    {0xF494, 0x0030},
    {0xF4CC, 0x0029},
    {0xF4CE, 0x002C},
    {0xF4D2, 0x0035},
    {0xF4D4, 0x0038},
    {0xF4D6, 0x0039},
    {0xF4DA, 0x0035},
    {0xF4DC, 0x0038},
    {0xF4DE, 0x0039},
    {0x3604, 0x0000},

    //{0x0100, 0x0100}
};

static struct sensor_res_tab_info s_s5k3m3sm24_resolution_tab_raw[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     .reg_tab =
         {
             {ADDR_AND_LEN_OF_ARRAY(s5k3m3sm24_init_setting), PNULL, 0,
              .width = 0, .height = 0, .xclk_to_sensor = EX_MCLK,
              .image_format = SENSOR_IMAGE_FORMAT_RAW},

             {ADDR_AND_LEN_OF_ARRAY(s5k3m3sm24_preview_setting), PNULL, 0,
              .width = PREVIEW_WIDTH, .height = PREVIEW_HEIGHT,
              .xclk_to_sensor = EX_MCLK,
              .image_format = SENSOR_IMAGE_FORMAT_RAW},
             /*
                                  {ADDR_AND_LEN_OF_ARRAY(s5k3m3sm24_snapshot_setting),
                                   PNULL, 0, .width = SNAPSHOT_WIDTH,
                                   .height = SNAPSHOT_HEIGHT, .xclk_to_sensor =
                EX_MCLK,
                                   .image_format = SENSOR_IMAGE_FORMAT_RAW}
             */
         }}

    /*If there are multiple modules,please add here*/
};

static SENSOR_TRIM_T s_s5k3m3sm24_resolution_trim_tab[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     .trim_info =
         {
             {0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0}},

             {.trim_start_x = PREVIEW_TRIM_X,
              .trim_start_y = PREVIEW_TRIM_Y,
              .trim_width = PREVIEW_TRIM_W,
              .trim_height = PREVIEW_TRIM_H,
              .line_time = PREVIEW_LINE_TIME,
              .bps_per_lane = PREVIEW_MIPI_PER_LANE_BPS,
              .frame_line = PREVIEW_FRAME_LENGTH,
              .scaler_trim = {.x = PREVIEW_TRIM_X,
                              .y = PREVIEW_TRIM_Y,
                              .w = PREVIEW_TRIM_W,
                              .h = PREVIEW_TRIM_H}},
             /*
                                  {.trim_start_x = SNAPSHOT_TRIM_X,
                                   .trim_start_y = SNAPSHOT_TRIM_Y,
                                   .trim_width = SNAPSHOT_TRIM_W,
                                   .trim_height = SNAPSHOT_TRIM_H,
                                   .line_time = SNAPSHOT_LINE_TIME,
                                   .bps_per_lane = SNAPSHOT_MIPI_PER_LANE_BPS,
                                   .frame_line = SNAPSHOT_FRAME_LENGTH,
                                   .scaler_trim = {.x = SNAPSHOT_TRIM_X,
                                                   .y = SNAPSHOT_TRIM_Y,
                                                   .w = SNAPSHOT_TRIM_W,
                                                   .h = SNAPSHOT_TRIM_H}},
             */
         }}

    /*If there are multiple modules,please add here*/

};

static SENSOR_REG_T s5k3m3sm24_shutter_reg[] = {
    {0x0202, SENSOR_MIN_SHUTTER},
};

static struct sensor_i2c_reg_tab s5k3m3sm24_shutter_tab = {
    .settings = s5k3m3sm24_shutter_reg,
    .size = ARRAY_SIZE(s5k3m3sm24_shutter_reg),
};

static SENSOR_REG_T s5k3m3sm24_again_reg[] = {
    {0x0204, SENSOR_BASE_GAIN},
};

static struct sensor_i2c_reg_tab s5k3m3sm24_again_tab = {
    .settings = s5k3m3sm24_again_reg, .size = ARRAY_SIZE(s5k3m3sm24_again_reg),
};

static SENSOR_REG_T s5k3m3sm24_dgain_reg[] = {

};

static struct sensor_i2c_reg_tab s5k3m3sm24_dgain_tab = {
    .settings = s5k3m3sm24_dgain_reg, .size = ARRAY_SIZE(s5k3m3sm24_dgain_reg),
};

static SENSOR_REG_T s5k3m3sm24_frame_length_reg[] = {
    {0x0340, PREVIEW_FRAME_LENGTH},
};

static struct sensor_i2c_reg_tab s5k3m3sm24_frame_length_tab = {
    .settings = s5k3m3sm24_frame_length_reg,
    .size = ARRAY_SIZE(s5k3m3sm24_frame_length_reg),
};

static struct sensor_aec_i2c_tag s5k3m3sm24_aec_info = {
    .slave_addr = (I2C_SLAVE_ADDR >> 1),
    .addr_bits_type = SENSOR_I2C_REG_16BIT,
    .data_bits_type = SENSOR_I2C_VAL_16BIT,
    .shutter = &s5k3m3sm24_shutter_tab,
    .again = &s5k3m3sm24_again_tab,
    .dgain = &s5k3m3sm24_dgain_tab,
    .frame_length = &s5k3m3sm24_frame_length_tab,
};

static SENSOR_STATIC_INFO_T s_s5k3m3sm24_static_info[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     .static_info = {.f_num = 200,
                     .focal_length = 354,
                     .max_fps = 0,
                     .max_adgain = 15 * 2,
                     .ois_supported = 0,
                     .pdaf_supported = 0,
                     .exp_valid_frame_num = 1,
                     .clamp_level = 64,
                     .adgain_valid_frame_num = 1,
                     .fov_info = {{4.614f, 3.444f}, 4.222f}}}
    /*If there are multiple modules,please add here*/
};

static SENSOR_MODE_FPS_INFO_T s_s5k3m3sm24_mode_fps_info[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     {.is_init = 0,
      {{SENSOR_MODE_COMMON_INIT, 0, 1, 0, 0},
       {SENSOR_MODE_PREVIEW_ONE, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_ONE_FIRST, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_ONE_SECOND, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_ONE_THIRD, 0, 1, 0, 0},
       {SENSOR_MODE_PREVIEW_TWO, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_TWO_FIRST, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_TWO_SECOND, 0, 1, 0, 0},
       {SENSOR_MODE_SNAPSHOT_TWO_THIRD, 0, 1, 0, 0}}}}
    /*If there are multiple modules,please add here*/
};

static struct sensor_module_info s_s5k3m3sm24_module_info_tab[VENDOR_NUM] = {
    {.module_id = MODULE_SUNNY,
     .module_info = {.major_i2c_addr = I2C_SLAVE_ADDR >> 1,
                     .minor_i2c_addr = I2C_SLAVE_ADDR >> 1,

                     .reg_addr_value_bits = SENSOR_I2C_REG_16BIT |
                                            SENSOR_I2C_VAL_16BIT |
                                            SENSOR_I2C_FREQ_400,

                     .avdd_val = SENSOR_AVDD_2800MV,
                     .iovdd_val = SENSOR_AVDD_1800MV,
                     .dvdd_val = SENSOR_AVDD_1000MV,

                     //.image_pattern = SENSOR_IMAGE_PATTERN_RAWRGB_GB,
                     .image_pattern = SENSOR_IMAGE_PATTERN_RAWRGB_GR,
                     .preview_skip_num = 1,
                     .capture_skip_num = 1,
                     .flash_capture_skip_num = 6,
                     .mipi_cap_skip_num = 0,
                     .preview_deci_num = 0,
                     .video_preview_deci_num = 0,

                     .threshold_eb = 0,
                     .threshold_mode = 0,
                     .threshold_start = 0,
                     .threshold_end = 0,

                     .sensor_interface =
                         {
                             .type = SENSOR_INTERFACE_TYPE_CSI2,
                             .bus_width = LANE_NUM,
                             .pixel_width = RAW_BITS,
                             .is_loose = 0,
                         },
                     .change_setting_skip_num = 1,
                     .horizontal_view_angle = 65,
                     .vertical_view_angle = 60}}

    /*If there are multiple modules,please add here*/
};

static struct sensor_ic_ops s_s5k3m3sm24_ops_tab;
struct sensor_raw_info *s_s5k3m3sm24_mipi_raw_info_ptr =
    &s_s5k3m3sm24_mipi_raw_info;

SENSOR_INFO_T g_s5k3m3sm24_mipi_raw_info = {
    .hw_signal_polarity = SENSOR_HW_SIGNAL_PCLK_P | SENSOR_HW_SIGNAL_VSYNC_P |
                          SENSOR_HW_SIGNAL_HSYNC_P,
    .environment_mode = SENSOR_ENVIROMENT_NORMAL | SENSOR_ENVIROMENT_NIGHT,
    .image_effect = SENSOR_IMAGE_EFFECT_NORMAL |
                    SENSOR_IMAGE_EFFECT_BLACKWHITE | SENSOR_IMAGE_EFFECT_RED |
                    SENSOR_IMAGE_EFFECT_GREEN | SENSOR_IMAGE_EFFECT_BLUE |
                    SENSOR_IMAGE_EFFECT_YELLOW | SENSOR_IMAGE_EFFECT_NEGATIVE |
                    SENSOR_IMAGE_EFFECT_CANVAS,

    .wb_mode = 0,
    .step_count = 7,
    .reset_pulse_level = SENSOR_LOW_PULSE_RESET,
    .reset_pulse_width = 50,
    .power_down_level = SENSOR_LOW_LEVEL_PWDN,
    .identify_count = 1,
    .identify_code = {{.reg_addr = s5k3m3sm24_PID_ADDR,
                       .reg_value = s5k3m3sm24_PID_VALUE},
                      {.reg_addr = s5k3m3sm24_VER_ADDR,
                       .reg_value = s5k3m3sm24_VER_VALUE}},

    .source_width_max = PREVIEW_WIDTH,
    .source_height_max = PREVIEW_HEIGHT,
    .name = (cmr_s8 *)SENSOR_NAME,
    .image_format = SENSOR_IMAGE_FORMAT_RAW,

    .module_info_tab = s_s5k3m3sm24_module_info_tab,
    .module_info_tab_size = ARRAY_SIZE(s_s5k3m3sm24_module_info_tab),

    .resolution_tab_info_ptr = s_s5k3m3sm24_resolution_tab_raw,
    .sns_ops = &s_s5k3m3sm24_ops_tab,
    .raw_info_ptr = &s_s5k3m3sm24_mipi_raw_info_ptr,

    .video_tab_info_ptr = NULL,
    .sensor_version_info = (cmr_s8 *)"s5k3m3sm24_v1",
};
